using System.Numerics;
using Robust.Client.AutoGenerated;
using Robust.Client.UserInterface.XAML;
using Content.Client.DeltaV.Arcade.S3D.Renderer;
using Content.Shared.DeltaV.Arcade.S3D;
using Content.Shared.Input;
using FancyWindow = Content.Client.UserInterface.Controls.FancyWindow;
using Robust.Client.UserInterface;
using Robust.Client.ResourceManagement;

namespace Content.Client.DeltaV.Arcade.S3D.UI;

[GenerateTypedNameReferences]
public sealed partial class S3DMenu : FancyWindow
{
    [Dependency] private readonly IEntityManager _entMan = default!;
    [Dependency] private readonly IResourceCache _resourceCache = default!;

    private readonly S3DBoundUserInterface _owner;
    public S3DMenu(S3DBoundUserInterface owner)
    {
        IoCManager.InjectDependencies(this);
        RobustXamlLoader.Load(this);

        _owner = owner;

        if (_entMan.TryGetComponent<S3DArcadeComponent>(owner.Owner, out var comp))
        {
            var renderer = new S3DRenderer(_resourceCache, comp, comp.WorldMap);
            renderer.SetSize = new Vector2(800, 600);
            renderer.CanKeyboardFocus = true;
            MainScreen.AddChild(renderer);
        }
    }
    protected override void KeyBindDown(GUIBoundKeyEventArgs args)
    {
        base.KeyBindDown(args);

        _owner.RegisterKeyPress(args.Function);
    }

    protected override void KeyBindUp(GUIBoundKeyEventArgs args)
    {
        base.KeyBindUp(args);

        _owner.UnregisterKeyPress(args.Function);
    }
}
